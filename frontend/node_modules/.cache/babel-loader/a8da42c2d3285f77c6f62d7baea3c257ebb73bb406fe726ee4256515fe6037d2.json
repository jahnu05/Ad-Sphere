{"ast":null,"code":"var _jsxFileName = \"/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Addque.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'; // Importing Axios for HTTP requests\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Importing FontAwesome CSS\nimport './styles.css'; // Importing custom styles\nimport Displayque from './Displayque'; // Importing Displayque component\n\n// Addque component definition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addque = () => {\n  _s();\n  // State variables for managing form data\n  const [que_type, setque_type] = useState('');\n  const [que, setque] = useState('');\n  const [options, setOptions] = useState([]);\n  const [jsonName, setJsonName] = useState(\"\");\n  const [mandatory, setMandatory] = useState(false);\n  const [categorize, setcategory] = useState(false);\n  const [queadd, setQueadd] = useState(false);\n  const [display, setdisplay] = useState(false);\n\n  // Handle change in question type\n  const handleque_typeChange = e => {\n    setque_type(e.target.value); // Set question type\n    setque(''); // Reset question text\n    setOptions([]); // Reset options\n    setMandatory(false); // Reset mandatory state\n    setcategory(false); // Reset categorize state\n  };\n\n  // Handle change in question text\n  const handlequeChange = e => {\n    setque(e.target.value); // Set question text\n  };\n\n  // Handle change in option text\n  const handleOptionChange = (e, index) => {\n    const newOptions = [...options]; // Create a copy of options array\n    newOptions[index] = e.target.value; // Update option at specified index\n    setOptions(newOptions); // Update options state\n  };\n\n  // Add new option to the options array\n  const addOption = index => {\n    setOptions([...options, '']);\n  };\n\n  // Remove option from the options array\n  const removeOption = index => {\n    const newOptions = [...options]; // Create a copy of options array\n    newOptions.splice(index, 1); // Remove option at specified index\n    setOptions(newOptions); // Update options state\n  };\n\n  // Handle change in mandatory checkbox\n  const handleMandatory = () => {\n    const newMandatory = !mandatory; // Toggle mandatory state\n    setMandatory(newMandatory); // Update mandatory state\n  };\n\n  // Function to handle toggle of categorize state\n  const handleCategorize = () => {\n    const newcategory = !categorize; // Toggle categorize state\n    setcategory(newcategory); // Update categorize state\n  };\n\n  // Function to handle change in JSON name\n  const handleInputChange = event => {\n    setJsonName(event.target.value); // Update JSON name state\n  };\n\n  // Function to render input fields based on question type\n  const renderInputFields = () => {\n    switch (que_type) {\n      case 'MCQ':\n      case 'DROPDOWN':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"renderinputs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"display-mcq-dd\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-mcq-dd\",\n                style: {\n                  color: \"black\"\n                },\n                placeholder: \"Enter your question\",\n                value: que,\n                onChange: handlequeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: que && options.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"option-row\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"option_details\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"option-cont\",\n                            style: {\n                              color: \"black\"\n                            },\n                            type: \"text\",\n                            placeholder: `Option ${index + 1}`,\n                            value: option,\n                            onChange: e => handleOptionChange(e, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 94,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 93,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => removeOption(index),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fa-solid fa-trash ikl\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 102,\n                              columnNumber: 101\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 45\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: que && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addOption(),\n                children: \"Add Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-mcq-dd\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mandatory\",\n                children: [\"mandatory: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"mandatory\",\n                  type: \"checkbox\",\n                  onChange: handleMandatory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categorize\",\n                id: \"jkh\",\n                children: [\"categorize: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"categorize\",\n                  type: \"checkbox\",\n                  onChange: handleCategorize\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 82\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"json_name\",\n                children: [\"JSON name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"json_name\",\n                  type: \"text\",\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      case 'QA':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"renderinputs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"display-qa\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-qa-div\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-qa\",\n                placeholder: \"Enter your question\",\n                style: {\n                  color: \"black\"\n                },\n                value: que,\n                onChange: handlequeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-qa\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mandatory\",\n                children: [\"mandatory: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"mandatory\",\n                  type: \"checkbox\",\n                  onChange: () => handleMandatory()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categorize\",\n                id: \"jkh\",\n                children: [\"categorize: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"categorize\",\n                  type: \"checkbox\",\n                  onChange: () => handleCategorize()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 82\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"json_name\",\n                children: [\"JSON name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"json_name\",\n                  type: \"text\",\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Function to handle submission of question\n  const handleSub = async () => {\n    try {\n      // Send a POST request to server\n      const response = await axios.post(\"/addque\", {\n        que_type,\n        que,\n        mandatory,\n        options,\n        categorize,\n        jsonName\n      });\n      console.log(\"post created:\", response.data);\n    } catch (error) {\n      console.error(\"error creating post:\", error);\n    }\n    // Reset states after submission\n    setQueadd(false);\n    setque(\"\");\n    setMandatory(false);\n    setcategory(false);\n    setJsonName(\"\");\n    const newdisplay = !display;\n    setdisplay(newdisplay);\n    setque_type(\"\");\n    setOptions([]);\n  };\n\n  // Function to handle addition of new question\n  const handleQueadd = () => {\n    const newqueadd = !queadd; // Toggle queadd state\n    setQueadd(newqueadd); // Update queadd state\n  };\n\n  // Function to render question details section\n  const que_details = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select que Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            color: \"black\"\n          },\n          value: que_type,\n          onChange: handleque_typeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              color: \"black\"\n            },\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              color: \"black\"\n            },\n            value: \"MCQ\",\n            children: \"Multiple Choice que (MCQ)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              color: \"black\"\n            },\n            value: \"QA\",\n            children: \"que & Answer (QA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              color: \"black\"\n            },\n            value: \"DROPDOWN\",\n            children: \"Dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"render-input\",\n        children: que_type && renderInputFields()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), que_type && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"done-button\",\n        onClick: () => handleSub(),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  };\n\n  // JSX structure for the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addque_main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addque\",\n      children: [/*#__PURE__*/_jsxDEV(Displayque, {\n        display: display,\n        setdisplay: setdisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-que\",\n        children: !queadd ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQueadd,\n          children: \"Add question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }, this) : que_details()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};\n_s(Addque, \"fMuD7FXQdw7ApKVwFiSgzvvtmBo=\");\n_c = Addque;\nexport default Addque; // Exporting the Addque component\nvar _c;\n$RefreshReg$(_c, \"Addque\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Displayque","jsxDEV","_jsxDEV","Addque","_s","que_type","setque_type","que","setque","options","setOptions","jsonName","setJsonName","mandatory","setMandatory","categorize","setcategory","queadd","setQueadd","display","setdisplay","handleque_typeChange","e","target","value","handlequeChange","handleOptionChange","index","newOptions","addOption","removeOption","splice","handleMandatory","newMandatory","handleCategorize","newcategory","handleInputChange","event","renderInputFields","className","children","style","color","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","onClick","htmlFor","id","required","handleSub","response","post","console","log","data","error","newdisplay","handleQueadd","newqueadd","que_details","_c","$RefreshReg$"],"sources":["/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Addque.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'; // Importing Axios for HTTP requests\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Importing FontAwesome CSS\nimport './styles.css' // Importing custom styles\nimport Displayque from './Displayque'; // Importing Displayque component\n\n// Addque component definition\nconst Addque = () => {\n    // State variables for managing form data\n    const [que_type, setque_type] = useState('');\n    const [que, setque] = useState('');\n    const [options, setOptions] = useState([]);\n    const [jsonName, setJsonName] = useState(\"\");\n    const [mandatory, setMandatory] = useState(false);\n    const [categorize, setcategory] = useState(false);\n    const [queadd, setQueadd] = useState(false);\n    const [display, setdisplay] = useState(false);\n\n    // Handle change in question type\n    const handleque_typeChange = (e) => {\n        setque_type(e.target.value); // Set question type\n        setque(''); // Reset question text\n        setOptions([]); // Reset options\n        setMandatory(false) // Reset mandatory state\n        setcategory(false) // Reset categorize state\n    };\n\n    // Handle change in question text\n    const handlequeChange = (e) => {\n        setque(e.target.value); // Set question text\n    };\n\n    // Handle change in option text\n    const handleOptionChange = (e, index) => {\n        const newOptions = [...options]; // Create a copy of options array\n        newOptions[index] = e.target.value; // Update option at specified index\n        setOptions(newOptions); // Update options state\n    };\n\n    // Add new option to the options array\n    const addOption = (index) => {\n        setOptions([...options, '']);\n    };\n\n    // Remove option from the options array\n    const removeOption = (index) => {\n        const newOptions = [...options]; // Create a copy of options array\n        newOptions.splice(index, 1); // Remove option at specified index\n        setOptions(newOptions); // Update options state\n    };\n\n    // Handle change in mandatory checkbox\n    const handleMandatory = () => {\n        const newMandatory = !mandatory; // Toggle mandatory state\n        setMandatory(newMandatory); // Update mandatory state\n    }\n\n    // Function to handle toggle of categorize state\n    const handleCategorize = () => {\n        const newcategory = !categorize; // Toggle categorize state\n        setcategory(newcategory); // Update categorize state\n    }\n\n    // Function to handle change in JSON name\n    const handleInputChange = (event) => {\n        setJsonName(event.target.value); // Update JSON name state\n    }\n\n    // Function to render input fields based on question type\n    const renderInputFields = () => {\n        switch (que_type) {\n            case 'MCQ':\n            case 'DROPDOWN':\n                return (\n                    <div className='renderinputs'>\n                        {/* Multiple choice or dropdown question */}\n                        <div className='display-mcq-dd'>\n                            <div>\n                                <input className=\"input-mcq-dd\" style={{ color: \"black\" }}\n                                    placeholder=\"Enter your question\"\n                                    value={que}\n                                    onChange={handlequeChange}\n                                />\n                            </div>\n                            <div className=\"options-container\">\n                                <ul>\n                                    {/* Mapping over options */}\n                                    {que && options.map((option, index) => {\n                                        return(\n                                        <li key={index}>\n                                            <div className=\"option-row\">\n                                                <div className='option_details'>\n                                                    <div>\n                                                        <input className='option-cont' style={{ color: \"black\" }}\n                                                            type=\"text\"\n                                                            placeholder={`Option ${index + 1}`}\n                                                            value={option}\n                                                            onChange={(e) => handleOptionChange(e, index)}\n                                                        />\n                                                    </div>\n                                                    <div>\n                                                        <button onClick={() => removeOption(index)}><i className=\"fa-solid fa-trash ikl\"></i></button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    )})}\n                                </ul>\n                            </div>\n                            <div>{que && <button onClick={() => addOption()}>Add Option</button>}</div>\n                            <div className='checkbox-mcq-dd'>\n                                {/* Checkboxes for mandatory and categorize */}\n                                <label htmlFor=\"mandatory\">mandatory: <input id=\"mandatory\" type='checkbox' onChange={handleMandatory}></input></label>\n                                <label htmlFor=\"categorize\" id=\"jkh\">categorize: <input id=\"categorize\" type='checkbox' onChange={handleCategorize} ></input></label>\n                                {/* Input field for JSON name */}\n                                <label htmlFor='json_name'>JSON name: <input id=\"json_name\" type='text' onChange={handleInputChange} required/></label>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case 'QA':\n                return (\n                    <div className='renderinputs'>\n                        {/* Question and answer type */}\n                        <div className='display-qa'>\n                            <div className='input-qa-div'>\n                                <input className=\"input-qa\" placeholder=\"Enter your question\" style={{ color: \"black\" }} value={que} onChange={handlequeChange} />\n                            </div>\n                            <div className='checkbox-qa'>\n                                {/* Checkboxes for mandatory and categorize */}\n                                <label htmlFor=\"mandatory\">mandatory: <input id=\"mandatory\" type='checkbox' onChange={() => handleMandatory()} ></input></label>\n                                <label htmlFor=\"categorize\" id=\"jkh\">categorize: <input id=\"categorize\" type='checkbox' onChange={() => handleCategorize()} ></input></label>\n                                {/* Input field for JSON name */}\n                                <label htmlFor='json_name'>JSON name: <input id=\"json_name\" type='text' onChange={handleInputChange} required/></label>\n                            </div>\n                        </div>\n                    </div>);\n            default:\n                return null;\n        }\n    };\n\n    // Function to handle submission of question\n    const handleSub = async () => {\n        try {\n            // Send a POST request to server\n            const response = await axios.post(\"/addque\", { que_type, que, mandatory, options, categorize, jsonName });\n            console.log(\"post created:\", response.data);\n        } catch (error) {\n            console.error(\"error creating post:\", error);\n        }\n        // Reset states after submission\n        setQueadd(false)\n        setque(\"\")\n        setMandatory(false)\n        setcategory(false)\n        setJsonName(\"\");\n        const newdisplay = !display\n        setdisplay(newdisplay)\n        setque_type(\"\")\n        setOptions([])\n    }\n\n    // Function to handle addition of new question\n    const handleQueadd = () => {\n        const newqueadd = !queadd // Toggle queadd state\n        setQueadd(newqueadd); // Update queadd state\n    }\n\n    // Function to render question details section\n    const que_details = () => {\n        return (\n            <div className=\"que-form\">\n                {/* Dropdown to select question type */}\n                <div>\n                    <label>Select que Type:</label>\n                    <select style={{ color: \"black\" }} value={que_type} onChange={handleque_typeChange}>\n                        <option style={{ color: \"black\" }} value=\"\">Select</option>\n                        <option style={{ color: \"black\" }} value=\"MCQ\">Multiple Choice que (MCQ)</option>\n                        <option style={{ color: \"black\" }} value=\"QA\">que & Answer (QA)</option>\n                        <option style={{ color: \"black\" }} value=\"DROPDOWN\">Dropdown</option>\n                    </select>\n                </div>\n                {/* Render input fields based on question type */}\n                <div className='render-input'>\n                    {que_type && renderInputFields()}\n                </div>\n                {/* Done button to submit question */}\n                {que_type && <button className=\"done-button\" onClick={() => handleSub()}>Done</button>}\n            </div>\n        )\n    }\n\n    // JSX structure for the component\n    return (\n        <div className='addque_main'>\n            <div className=\"addque\">\n                {/* Display existing questions */}\n                <Displayque display={display} setdisplay={setdisplay} />\n                {/* Button to toggle adding new question */}\n                <div className=\"add-que\">{!queadd ? <button onClick={handleQueadd}>Add question</button> : que_details()}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Addque; // Exporting the Addque component\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}