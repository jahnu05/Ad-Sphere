{"ast":null,"code":"var _jsxFileName = \"/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Dashboards/Pie.js\",\n  _s = $RefreshSig$();\n// PieChart.js\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null); // Ref to access the canvas element\n  const chartInstanceRef = useRef(null); // Ref to store the Chart.js instance\n\n  // Effect hook to initialize or update the chart\n  useEffect(() => {\n    // Get the 2D rendering context of the canvas\n    if (!chartInstanceRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n\n      // Create a new Chart.js instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: data.labels,\n          datasets: [{\n            label: 'Pie Chart',\n            data: data.values,\n            backgroundColor: data.colors\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '48%'\n        }\n      });\n    } else {\n      // If chart instance exists, update the data and re-render\n      chartInstanceRef.current.data.datasets[0].data = data.values;\n      chartInstanceRef.current.update();\n    }\n  }, [data]);\n  return (\n    /*#__PURE__*/\n    // <div>\n    _jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n    // </div>\n  );\n};\n_s(PieChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","PieChart","data","_s","chartRef","chartInstanceRef","current","ctx","getContext","type","labels","datasets","label","values","backgroundColor","colors","options","responsive","maintainAspectRatio","cutout","update","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Dashboards/Pie.js"],"sourcesContent":["// PieChart.js\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst PieChart = ({ data }) => {\n  const chartRef = useRef(null);    // Ref to access the canvas element\n  const chartInstanceRef = useRef(null);  // Ref to store the Chart.js instance\n\n  // Effect hook to initialize or update the chart\n  useEffect(() => {\n\n    // Get the 2D rendering context of the canvas\n    if (!chartInstanceRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n\n      // Create a new Chart.js instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: 'doughnut', \n        data: {\n          labels: data.labels,\n          datasets: [{\n            label: 'Pie Chart',\n            data: data.values,\n            backgroundColor: data.colors,\n          }],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '48%' \n        },\n      });\n    } else {\n      // If chart instance exists, update the data and re-render\n      chartInstanceRef.current.data.datasets[0].data = data.values;\n      chartInstanceRef.current.update();\n    }\n  }, [data]);\n\n  return (\n    // <div>\n      <canvas ref={chartRef} />\n    // </div>\n  );\n};\n\nexport default PieChart;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAI;EAClC,MAAMQ,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE;;EAExC;EACAD,SAAS,CAAC,MAAM;IAEd;IACA,IAAI,CAACS,gBAAgB,CAACC,OAAO,EAAE;MAC7B,MAAMC,GAAG,GAAGH,QAAQ,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;;MAE7C;MACAH,gBAAgB,CAACC,OAAO,GAAG,IAAIR,KAAK,CAACS,GAAG,EAAE;QACxCE,IAAI,EAAE,UAAU;QAChBP,IAAI,EAAE;UACJQ,MAAM,EAAER,IAAI,CAACQ,MAAM;UACnBC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,WAAW;YAClBV,IAAI,EAAEA,IAAI,CAACW,MAAM;YACjBC,eAAe,EAAEZ,IAAI,CAACa;UACxB,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;QACV;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAd,gBAAgB,CAACC,OAAO,CAACJ,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC,CAACT,IAAI,GAAGA,IAAI,CAACW,MAAM;MAC5DR,gBAAgB,CAACC,OAAO,CAACc,MAAM,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV;IAAA;IACE;IACEF,OAAA;MAAQqB,GAAG,EAAEjB;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;IAC1B;EAAA;AAEJ,CAAC;AAACtB,EAAA,CAxCIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}