{"ast":null,"code":"var _jsxFileName = \"/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Displayque.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Displayque = ({\n  display,\n  setdisplay\n}) => {\n  _s();\n  const queRefs = useRef([{\n    \"que\": null,\n    \"options\": []\n  }]); // useRef for storing references to input elements\n  const [data, setdata] = useState([]); // State variable to store data\n\n  // Fetch question data from the backend on component mount or when display state changes\n  useEffect(() => {\n    axios.get(\"/displayque\") // Fetch question data from backend\n    .then(res => {\n      res.data.forEach(element => {\n        element.edit = true; // Add 'edit' property to each question object\n      });\n      setdata(res.data); // Set the fetched data to the state\n    }).catch(err => console.log(err));\n  }, [display]); // Log error if fetching data fails\n\n  // Handle editing of a question \n  const handleEdit = index => {\n    const newdata = [...data];\n    newdata[index].edit = false; // Set 'edit' property of the selected question to false\n    setdata(newdata); // Update state with the modified data\n  };\n\n  // Handle saving changes to a question\n  const handleSavechanges = index => {\n    var _queRefs$current$inde, _queRefs$current$inde2;\n    let newdata = data[index];\n\n    // Update question and options based on user input\n    newdata[\"que\"] = (_queRefs$current$inde = queRefs.current[index]) === null || _queRefs$current$inde === void 0 ? void 0 : (_queRefs$current$inde2 = _queRefs$current$inde.que) === null || _queRefs$current$inde2 === void 0 ? void 0 : _queRefs$current$inde2.value;\n    newdata[\"mandatory\"] = queRefs.current[index].mandatory.checked;\n    newdata[\"categorize\"] = queRefs.current[index].categorize.checked;\n    let options = [];\n    let i = 0;\n    while ((_queRefs$current$inde3 = queRefs.current[index]) !== null && _queRefs$current$inde3 !== void 0 && _queRefs$current$inde3.options[i]) {\n      var _queRefs$current$inde3, _queRefs$current$inde4;\n      options[i] = (_queRefs$current$inde4 = queRefs.current[index]) === null || _queRefs$current$inde4 === void 0 ? void 0 : _queRefs$current$inde4.options[i].value;\n      i++;\n    }\n    newdata[\"options\"] = options;\n\n    // Send updated question data to the backend for saving\n    axios.post(\"/que-save\", {\n      \"que\": newdata\n    }).then(res => {\n      const newdisplay = !display;\n      setdisplay(newdisplay); // Toggle the display state to trigger re-render\n    }).catch(err => console.log(err)); // Log error if saving data fails\n  };\n\n  // Handle change in mandatory checkbox\n  const handleMandatorychange = (e, index) => {\n    if (data[index].edit === false) {\n      const newdata = [...data];\n      newdata[index].mandatory = !data[index].mandatory; // Toggle the 'mandatory' property\n      setdata(newdata); // Update state with modified data\n    }\n  };\n\n  // Handle change in categorize checkbox\n  const handleCategorizechange = (e, index) => {\n    if (data[index].edit === false) {\n      const newdata = [...data];\n      newdata[index].categorize = !data[index].categorize; // Toggle the 'categorize' property\n      setdata(newdata); // Update state with modified data\n    }\n  };\n\n  // Handle changes in question or option inputs\n  const handleEditchanges = (e, index, indx) => {\n    if (indx === -1) {\n      const new_val = e.target.value;\n      const new_data = [...data];\n      new_data[index].que = new_val; // Update question\n      setdata(new_data); // Update state with modified data\n    } else {\n      const new_val = e.target.value;\n      const new_data = [...data];\n      new_data[index].options[indx] = new_val; // Update option\n      setdata(new_data); // Update state with modified data\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((points, index) => {\n      var _queRefs$current$inde5;\n      if (!queRefs.current[index]) {\n        queRefs.current[index] = {\n          que: null,\n          options: [],\n          mandatory: null,\n          categorize: null\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"container-1-que\",\n            onChange: e => handleEditchanges(e, index, -1),\n            ref: Element => queRefs.current[index].que = Element,\n            value: points[\"que\"],\n            disabled: points[\"edit\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-2\",\n            children: points[\"options\"].map((option, indx) => {\n              return /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleEditchanges(e, index, indx),\n                className: \"cont-2_options\",\n                ref: Element => queRefs.current[index].options[indx] = Element,\n                disabled: points[\"edit\"],\n                value: option\n              }, indx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-2_1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mandatory\",\n            id: \"jkh\",\n            children: [\"mandatory: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: Element => queRefs.current[index].mandatory = Element,\n              id: \"mandatory\",\n              type: \"checkbox\",\n              checked: points[\"mandatory\"],\n              disabled: points.edit,\n              onClick: e => handleMandatorychange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"categorize\",\n            id: \"jkh\",\n            children: [\"categorize: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: Element => queRefs.current[index].categorize = Element,\n              id: \"categorize\",\n              type: \"checkbox\",\n              checked: points[\"categorize\"],\n              disabled: points.edit,\n              onClick: e => handleCategorizechange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), console.log((_queRefs$current$inde5 = queRefs.current[index].que) === null || _queRefs$current$inde5 === void 0 ? void 0 : _queRefs$current$inde5.innerText), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bt1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                axios.post(\"/remove-entry\", {\n                  id: points._id\n                }) // Send request to remove question entry\n                .then(res => {\n                  console.log(res.data);\n                }).catch(err => console.log(err));\n                const newdisplay = !display;\n                setdisplay(newdisplay); // Toggle display state to trigger re-render\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-trash ikl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bt2\",\n            children: !points.edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSavechanges(index),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-save svl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 70\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(index),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-pen kml\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 208\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 166\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Displayque, \"clYkFJl/HEvNnQg/fS4QM8EqtW8=\");\n_c = Displayque;\nexport default Displayque;\nvar _c;\n$RefreshReg$(_c, \"Displayque\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Displayque","display","setdisplay","_s","queRefs","data","setdata","get","then","res","forEach","element","edit","catch","err","console","log","handleEdit","index","newdata","handleSavechanges","_queRefs$current$inde","_queRefs$current$inde2","current","que","value","mandatory","checked","categorize","options","i","_queRefs$current$inde3","_queRefs$current$inde4","post","newdisplay","handleMandatorychange","e","handleCategorizechange","handleEditchanges","indx","new_val","target","new_data","children","map","points","_queRefs$current$inde5","className","onChange","ref","Element","disabled","fileName","_jsxFileName","lineNumber","columnNumber","option","htmlFor","id","type","onClick","innerText","_id","_c","$RefreshReg$"],"sources":["/home/jahnavi/resume/final_projects/code(1)/code/Ad-Sphere/frontend/src/Displayque.js"],"sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport axios from \"axios\";\n\nconst Displayque = ({ display, setdisplay }) => {\n    const queRefs = useRef([{ \"que\": null, \"options\": [] }])    // useRef for storing references to input elements\n    const [data, setdata] = useState([]);   // State variable to store data\n\n    // Fetch question data from the backend on component mount or when display state changes\n    useEffect(() => {\n        axios.get(\"/displayque\")    // Fetch question data from backend\n            .then(res => {\n                res.data.forEach(element => {\n                    element.edit = true;    // Add 'edit' property to each question object\n                });\n                setdata(res.data)   // Set the fetched data to the state\n            })\n            .catch(err => console.log(err));\n    }, [display]);  // Log error if fetching data fails\n\n    // Handle editing of a question \n    const handleEdit = (index) => {\n        const newdata = [...data]\n        newdata[index].edit = false // Set 'edit' property of the selected question to false\n        setdata(newdata)    // Update state with the modified data\n    }\n\n    // Handle saving changes to a question\n    const handleSavechanges = (index) => {\n        let newdata = data[index]\n\n        // Update question and options based on user input\n        newdata[\"que\"] = queRefs.current[index]?.que?.value\n        newdata[\"mandatory\"] = queRefs.current[index].mandatory.checked;\n        newdata[\"categorize\"] = queRefs.current[index].categorize.checked;\n        let options = []\n        let i = 0\n        while (queRefs.current[index]?.options[i]) {\n            options[i] = queRefs.current[index]?.options[i].value\n            i++\n        }\n        newdata[\"options\"] = options\n\n        // Send updated question data to the backend for saving\n        axios.post(\"/que-save\", { \"que\": newdata })\n            .then(res => {\n                const newdisplay = !display\n                setdisplay(newdisplay)  // Toggle the display state to trigger re-render\n            })\n            .catch(err => console.log(err)) // Log error if saving data fails\n    }\n\n    // Handle change in mandatory checkbox\n    const handleMandatorychange = (e, index) => {\n        if (data[index].edit === false) {\n            const newdata = [...data]\n            newdata[index].mandatory = !data[index].mandatory   // Toggle the 'mandatory' property\n            setdata(newdata)    // Update state with modified data\n        }\n    }\n\n    // Handle change in categorize checkbox\n    const handleCategorizechange = (e, index) => {\n        if (data[index].edit === false) {\n            const newdata = [...data]\n            newdata[index].categorize = !data[index].categorize     // Toggle the 'categorize' property\n            setdata(newdata)    // Update state with modified data\n        }\n    }\n\n    // Handle changes in question or option inputs\n    const handleEditchanges = (e,index,indx) => {\n        if(indx === -1)\n        {\n            const new_val = e.target.value\n            const new_data = [...data]\n            new_data[index].que = new_val   // Update question\n            setdata(new_data)   // Update state with modified data\n        }\n        else\n        {\n            const new_val = e.target.value\n            const new_data = [...data]\n            new_data[index].options[indx] = new_val   // Update option\n            setdata(new_data)   // Update state with modified data\n        }\n    }\n\n    return (\n        <div>\n            {\n                data.map((points, index) => {\n                    if (!queRefs.current[index]) {\n                        queRefs.current[index] = { que: null, options: [], mandatory: null, categorize: null };\n                    }\n                    return (\n                        <div key={index} className='container-0'>\n                            <div className='container-1'>\n                                <input className=\"container-1-que\" onChange={(e) => handleEditchanges(e,index, -1)} ref={Element => queRefs.current[index].que = Element} value={points[\"que\"]} disabled={points[\"edit\"]} />\n                                <div className='container-2'>\n                                    {points[\"options\"].map((option, indx) => {\n                                        return (\n                                            <input onChange={(e) => handleEditchanges(e,index, indx)}\n                                                className=\"cont-2_options\"\n                                                ref={Element => (queRefs.current[index].options)[indx] = Element}\n                                                disabled={points[\"edit\"]}\n                                                key={indx}\n                                                value={option}\n                                            />\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                            <div className='container-2_1'>\n                                <label htmlFor=\"mandatory\" id=\"jkh\">mandatory: <input ref={Element => queRefs.current[index].mandatory = Element} id=\"mandatory\" type='checkbox' checked={points[\"mandatory\"]} disabled={points.edit} onClick={(e) => handleMandatorychange(e, index)}></input></label>\n                                <label htmlFor=\"categorize\" id=\"jkh\">categorize: <input ref={Element => queRefs.current[index].categorize = Element} id=\"categorize\" type='checkbox' checked={points[\"categorize\"]} disabled={points.edit} onClick={(e) => handleCategorizechange(e, index)}></input></label>\n                            </div>\n                            {console.log(queRefs.current[index].que?.innerText)}\n                            <div className='container-3'>\n                                <div className=\"bt1\"><button onClick={() => {\n                                    axios.post(\"/remove-entry\", { id: points._id })     // Send request to remove question entry\n                                        .then(res => {\n                                            console.log(res.data)\n                                        })\n                                        .catch(err => console.log(err))\n                                    const newdisplay = !display\n                                    setdisplay(newdisplay)  // Toggle display state to trigger re-render\n                                }}><i className=\"fa-solid fa-trash ikl\"></i></button></div>\n                                <div className='bt2'>{!points.edit ? <button onClick={() => handleSavechanges(index)}><i className=\"fas fa-save svl\"></i></button> : <button onClick={() => handleEdit(index)}><i className='fas fa-pen kml'></i></button>}</div>\n                            </div>\n                        </div>)\n                })\n            }\n        </div>\n    )\n}\n\nexport default Displayque;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}